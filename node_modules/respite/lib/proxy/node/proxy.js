var http = require('http'),
  httpProxy = require('http-proxy');
var colors = require("colors");

var proxy = httpProxy.createProxyServer({});

var log = function(content, type) {
  var content = "[info proxy] " + content;
  content = content.green;
  if (type === "err") content = content.red;
  console.log(content);
}

var unexpected = function() {
  proxy.on('error', function(err, req, res) {
    log('Something went wrong. And we are reporting a custom error message.' + err, "err");
    res.writeHead(500, {
      'Content-Type': 'text/plain'
    });
    res.end('Something went wrong. And we are reporting a custom error message.');
  });
}

var proxyDomain = function(req, res, config) {
  var handlerServer = "http://127.0.0.1:" + config.handlerServer.port;
  var hostName = req.headers.host.split(":")[0];
  for (var i = 0; i < config.debugDomains.length; i++) {
    var domain = config.debugDomains[i];
    if (hostName == domain || req.headers["fiddlerhostname"] == domain) {
      var accept = req.headers["accept"];
      if (/^.*text\/html.*$/.test(accept) && !req.headers["fiddlerpass"]) {
        proxy.web(req, res, {
          target: handlerServer
        });
        return true;
      }
    }
  }
  return false;
}

var createServer = function(config) {
  var nodeConf = config.proxy.servers.node;
  var server = http.createServer(function(req, res) {
    var host = req.headers.host;

    var ip = req.headers['x-forwarded-for'] || req.connection.remoteAddress;
    log("client ip:" + ip + ", url:" + req.url);

    unexpected();

    if (!proxyDomain(req, res, config)) {
      // pass other
      proxy.web(req, res, {
        target: req.url.split(":")[0] + "://" + host
      });
    }
  });

  log("node proxy listening on port " + nodeConf.port)
  server.listen(nodeConf.port);
}

module.exports = function(config) {
  createServer(config);
}