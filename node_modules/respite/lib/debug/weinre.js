/**
 * author ddchen
 */

var spawn = require('child_process').spawn;
var exec = require('child_process').exec;
var path = require("path");
var localIpFetcher = require("../localIpFetcher.js");

var platform = process.platform;

var weinrePath = path.join(__dirname, '../../node_modules/weinre/weinre');

var launch = function(conf) {
	if (!conf.debug || !conf.debug.weinre) return;
	var ipAddress = localIpFetcher.getIPAdress();
	runWeinre(conf, ipAddress);
	setTimeout(function() {
		runChrome(conf, ipAddress);
	}, 1000);
}

var runWeinre = function(conf, ipAddress) {
	console.log("[info weinre] start to launch weinre".blue);

	var port = conf.debug.weinre.port;

	var run = spawn('node', [weinrePath, '--boundHost', ipAddress, '--httpPort', port]);

	run.stdout.on('data', function(data) {
		console.log(('[info weinre] ' + data).blue);
	});

	run.stderr.on('data', function(err) {
		console.log(('[info weinre] ' + err).red);
	});

	run.on('close', function(code) {
		console.log('[info weinre] child process exited with code ' + code);
	});
}

var runChrome = function(conf, ipAddress) {
	var chrome = conf.debug.chrome;
	var port = conf.debug.weinre.port;
	if (!chrome || !chrome.launchPath || !chrome.autoRun) return;
	var debugPage = "http://" + ipAddress + ":" + port + "/client/#anonymous";
	var chromePath = chrome.launchPath;
	console.log("[info chrome] start to launch chrome".green);
	console.log(("[info chrome] debugPage is " + debugPage).green);

	if (platform === "win32") {
		var command = '"' + chromePath + '"' + ' ' + debugPage;
	} else {
		var command = 'open "' + chromePath + '"' + ' ' + debugPage;
	}

	exec(command, {}, function(err, stdout, stderr) {
		if (err) {
			console.log(('[info chrome] ' + err).red);
		} else {
			console.log(('[info chrome] launch successfully!').green);
		}
	});
}

module.exports = {
	launch: launch
}